rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para las salas de chat
    match /rooms/{roomId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // Reglas para los mensajes dentro de las salas
    match /rooms/{roomId}/messages/{messageId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        // Permitir eliminar mensajes si el usuario es el creador de la sala
        exists(/databases/$(database)/documents/rooms/$(roomId)) &&
        get(/databases/$(database)/documents/rooms/$(roomId)).data.createdBy == request.auth.uid
      );
    }
    
    // Reglas para indicadores de escritura
    match /rooms/{roomId}/typing/{userId} {
      allow read, write: if request.auth != null;
      // Permitir eliminar indicadores de escritura si el usuario es el creador de la sala
      allow delete: if request.auth != null && (
        request.auth.uid == userId ||
        (exists(/databases/$(database)/documents/rooms/$(roomId)) &&
        get(/databases/$(database)/documents/rooms/$(roomId)).data.createdBy == request.auth.uid)
      );
    }
    
    // Reglas para chats privados
    match /privateChats/{chatId} {
      allow read: if request.auth != null && 
        (chatId.matches('.*_' + request.auth.uid + '$') || chatId.matches('^' + request.auth.uid + '_.*'));
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
    }
    
    // Reglas para mensajes de chats privados con confirmaciones de lectura
    match /privateChats/{chatId}/messages/{messageId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        // Allow updating readBy field for read receipts
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readBy']) &&
        request.resource.data.readBy.keys().hasAll([request.auth.uid])
      );
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Reglas para usuarios
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}